/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/test",{

/***/ "./src/pages/test.tsx":
/*!****************************!*\
  !*** ./src/pages/test.tsx ***!
  \****************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("// import fs from 'fs';\n// import { GetServerSideProps } from 'next';\n// // import glob from 'glob';\n// import { sync as globSync } from 'glob';\n// import path from 'path';\n// import matter from 'gray-matter';\n// // const postsDirectory = path.join(process.cwd(), 'posts');\n// // export const getServerSideProps: GetServerSideProps = async () => {\n// //   const filePaths = globSync(`${postsDirectory}/**/*.md`);\n// //   return {\n// //     props: {\n// //       filePaths,\n// //     },\n// //   };\n// // };\n// interface TestProps {\n//   filePaths: string[];\n// }\n// const Test: React.FC<TestProps> = ({ filePaths }) => {\n//   console.log(filePaths); // getServerSideProps에서 가져온 filePaths를 콘솔에 출력\n//   return (\n//     <div>\n//       <h1>Markdown Files</h1>\n//       <ul>\n//         {filePaths.map((filePath) => (\n//           <li key={filePath}>{filePath}</li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// }\n// export default Test\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcGFnZXMvdGVzdC50c3giLCJtYXBwaW5ncyI6IkFBQUEsdUJBQXVCO0FBQ3ZCLDZDQUE2QztBQUM3Qyw4QkFBOEI7QUFDOUIsMkNBQTJDO0FBQzNDLDJCQUEyQjtBQUMzQixvQ0FBb0M7QUFFcEMsK0RBQStEO0FBRS9ELHlFQUF5RTtBQUN6RSxnRUFBZ0U7QUFFaEUsZ0JBQWdCO0FBQ2hCLGtCQUFrQjtBQUNsQixzQkFBc0I7QUFDdEIsWUFBWTtBQUNaLFVBQVU7QUFDVixRQUFRO0FBR1Isd0JBQXdCO0FBQ3hCLHlCQUF5QjtBQUN6QixJQUFJO0FBRUoseURBQXlEO0FBQ3pELDBFQUEwRTtBQUUxRSxhQUFhO0FBQ2IsWUFBWTtBQUNaLGdDQUFnQztBQUNoQyxhQUFhO0FBQ2IseUNBQXlDO0FBQ3pDLCtDQUErQztBQUMvQyxjQUFjO0FBQ2QsY0FBYztBQUNkLGFBQWE7QUFDYixPQUFPO0FBQ1AsSUFBSTtBQUdKLHNCQUFzQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvcGFnZXMvdGVzdC50c3g/NDhhOSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBpbXBvcnQgZnMgZnJvbSAnZnMnO1xuLy8gaW1wb3J0IHsgR2V0U2VydmVyU2lkZVByb3BzIH0gZnJvbSAnbmV4dCc7XG4vLyAvLyBpbXBvcnQgZ2xvYiBmcm9tICdnbG9iJztcbi8vIGltcG9ydCB7IHN5bmMgYXMgZ2xvYlN5bmMgfSBmcm9tICdnbG9iJztcbi8vIGltcG9ydCBwYXRoIGZyb20gJ3BhdGgnO1xuLy8gaW1wb3J0IG1hdHRlciBmcm9tICdncmF5LW1hdHRlcic7XG5cbi8vIC8vIGNvbnN0IHBvc3RzRGlyZWN0b3J5ID0gcGF0aC5qb2luKHByb2Nlc3MuY3dkKCksICdwb3N0cycpO1xuXG4vLyAvLyBleHBvcnQgY29uc3QgZ2V0U2VydmVyU2lkZVByb3BzOiBHZXRTZXJ2ZXJTaWRlUHJvcHMgPSBhc3luYyAoKSA9PiB7XG4vLyAvLyAgIGNvbnN0IGZpbGVQYXRocyA9IGdsb2JTeW5jKGAke3Bvc3RzRGlyZWN0b3J5fS8qKi8qLm1kYCk7XG5cbi8vIC8vICAgcmV0dXJuIHtcbi8vIC8vICAgICBwcm9wczoge1xuLy8gLy8gICAgICAgZmlsZVBhdGhzLFxuLy8gLy8gICAgIH0sXG4vLyAvLyAgIH07XG4vLyAvLyB9O1xuXG5cbi8vIGludGVyZmFjZSBUZXN0UHJvcHMge1xuLy8gICBmaWxlUGF0aHM6IHN0cmluZ1tdO1xuLy8gfVxuXG4vLyBjb25zdCBUZXN0OiBSZWFjdC5GQzxUZXN0UHJvcHM+ID0gKHsgZmlsZVBhdGhzIH0pID0+IHtcbi8vICAgY29uc29sZS5sb2coZmlsZVBhdGhzKTsgLy8gZ2V0U2VydmVyU2lkZVByb3Bz7JeQ7IScIOqwgOyguOyYqCBmaWxlUGF0aHPrpbwg7L2Y7IaU7JeQIOy2nOugpVxuXG4vLyAgIHJldHVybiAoXG4vLyAgICAgPGRpdj5cbi8vICAgICAgIDxoMT5NYXJrZG93biBGaWxlczwvaDE+XG4vLyAgICAgICA8dWw+XG4vLyAgICAgICAgIHtmaWxlUGF0aHMubWFwKChmaWxlUGF0aCkgPT4gKFxuLy8gICAgICAgICAgIDxsaSBrZXk9e2ZpbGVQYXRofT57ZmlsZVBhdGh9PC9saT5cbi8vICAgICAgICAgKSl9XG4vLyAgICAgICA8L3VsPlxuLy8gICAgIDwvZGl2PlxuLy8gICApO1xuLy8gfVxuXG5cbi8vIGV4cG9ydCBkZWZhdWx0IFRlc3QiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/pages/test.tsx\n"));

/***/ })

});